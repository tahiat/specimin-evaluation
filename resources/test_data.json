[
    {
        "issue_id" : "cf-1291",
        "url": "https://github.com/codespecs/daikon.git",
        "branch": "",
        "commit_hash": "0c70880",
        "project_name": "daikon",
        "build_command": "this can be cf command or java",
        "root_dir": "java",
        "targets": [
            {
                "method": "executePureMethod(Method, Object, Object[])",
                "file": "PureMethodInfo.java",
                "package": "daikon.chicory"
            }
        ],
        "cf_version": "2.1.10",
        "java_version": "",
        "note": "",
        "bug_type": "error",
        "bug_pattern": {
            "file_pattern": "(\\w+\\.java)",
            "error_pattern": "error: \\[(.+?)\\]",
            "source_pattern": "(return\\s+\\w+;)",
            "found_pattern": "found   : (.*)",
            "required_pattern": "required: (.*)"
        },
        "checker_qual_required": true,
        "has_dependency": true
    },
    {
        "issue_id" : "cf-6282",
        "url": "https://github.com/jyoo980/Chronicle-Core.git",
        "branch": "yoo/checkerframework-crash",
        "commit_hash": "",
        "project_name": "Chronicle-Core",
        "build_command": "mvn -X compile",
        "root_dir": "src/main/java",
        "targets": [
            {
                "method": "setAccessible(AccessibleObject)",
                "file": "ClassUtil.java",
                "package": "net.openhft.chronicle.core.internal"
            }
        ],
        "cf_version": "3.40.0",
        "java_version": "17",
        "note": "",
        "bug_type": "crash",
        "checker_qual_required": false,
        "has_dependency": true
    },
    {
        "issue_id" : "cf-6077",
        "url": "https://github.com/jacek-lewandowski/cassandra.git",
        "branch": "checker-framework-testing",
        "commit_hash": "",
        "project_name": "cassandra",
        "build_command": "ant cf-only -Dcf.check.only=org/apache/cassandra/index/sasi/conf/IndexMode.java",
        "root_dir": "src/java",
        "targets": [
            {
                "method": "getMode(ColumnMetadata, Map<String, String>)",
                "file": "IndexMode.java",
                "package": "org.apache.cassandra.index.sasi.conf"
            }
        ],
        "cf_version": "3.36.0",
        "java_version": "",
        "note": "",
        "bug_type": "error",
        "bug_pattern": {
            "file_pattern": "(\\w+\\.java)",
            "error_pattern": "error: \\[(.+?)\\]",
            "source_pattern": "The type of object is: (.+)",
            "reason_pattern": "Reason for going out of scope: (.+)"
        },
        "checker_qual_required": false,
        "has_dependency": true
    },
    {
        "issue_id" : "cf-6060",
        "url": "https://github.com/markro49/jOOQ.git",
        "branch": "",
        "commit_hash": "e185dd7",
        "project_name": "jOOQ",
        "build_command": "mvn -V -B -e clean compile -Dcheckerframework.checkers=org.checkerframework.checker.signedness.SignednessChecker -Dcheckerframework.suppress=\"type.anno.before\"",
        "root_dir": "jOOQ/src/main/java",
        "targets": [
            {
                "method": "spliterator()",
                "file": "ResultQuery.java",
                "package": "org.jooq"
            }
        ],
        "cf_version": "",
        "java_version": "",
        "note": "",
        "bug_type": "crash",
        "checker_qual_required": false,
        "has_dependency": true
    },
    {
        "issue_id" : "cf-6030",
        "url": "https://github.com/jacek-lewandowski/cassandra.git",
        "branch": "cf-testing",
        "commit_hash": "",
        "project_name": "cassandra",
        "build_command": "ant cf-only -Dcf.check.only=org/apache/cassandra/io/sstable/format/SSTableScanner.java",
        "root_dir": "src/java",
        "targets": [
            {
                "method": "hasNext()",
                "file": "SSTableScanner.java",
                "package": "org.apache.cassandra.io.sstable.format"
            }
        ],
        "cf_version": "3.35.0",
        "java_version": "11",
        "note": "This issue describes multiple bugs. This is the second one (\"ant cf-only -Dcf.check.only=org/apache/cassandra/io/sstable/format/SSTableScanner.java\"). Based on the comments in the issue, the maintainers could not reproduce the first crash at the time (https://github.com/typetools/checker-framework/issues/6030#issuecomment-1601171591), so there's no reason that we should either.",
        "bug_type": "crash",
        "checker_qual_required": true,
        "has_dependency": true
    },
    {
        "issue_id" : "cf-6019",
        "url": "https://github.com/fillmore-labs/kafka-sensors.git",
        "branch": "",
        "commit_hash": "d45baa",
        "project_name": "kafka-sensors",
        "build_command": "bazel test //src/test/...",
        "root_dir": "src/main/java/", 
        "targets": [
            {
                "method": "transform(String, byte[])",
                "file": "Avro2Confluent.java",
                "package": "com.fillmore_labs.kafka.sensors.serde.confluent.interop"
            }
        ],
        "cf_version": "3.35.0",
        "java_version": "17",
        "note": "",
        "bug_type": "crash",
        "require_stack": false,
        "checker_qual_required": false,
        "has_dependency": true
    },
    {
        "issue_id" : "cf-4614",
        "url": "https://github.com/tahiat/cf-parser-error.git",
        "branch": "",
        "commit_hash": "",
        "project_name": "cf-parser-error",
        "build_command": "javacheck -g Version.java -processor nullness",
        "root_dir": "src/main/java/", 
        "targets": [
            {
                "method": "method()",
                "file": "Version.java",
                "package": "net.mtu.eggplant.checker.parser_error"
            }
        ],
        "cf_version": "3.12.0",
        "java_version": "11",
        "note": "",
        "bug_type": "false_positive",
        "bug_pattern": {
            "file_pattern": "(\\w+\\.java)",
            "error_pattern": "error: \\[(.+?)\\]",
            "source_pattern": "(\\.map\\(.*?\\)\\)\\))",
            "found_pattern": "found   : (.*)",
            "required_pattern": "required: (.*)"
        },
        "checker_qual_required": false,
        "has_dependency": false
    },
    {
        "issue_id" : "cf-3850",
        "url": "https://github.com/vlsi/calcite.git",
        "branch": "",
        "commit_hash": "78d9777",
        "project_name": "calcite",
        "build_command": "",
        "root_dir": "core/src/main/java/", 
        "targets": [
            {
                "method": "toPos(Iterable<? extends SqlNode>)",
                "file": "SqlParserPos.java",
                "package": "org.apache.calcite.sql.parser"
            }
        ],
        "cf_version": "3.7.1",
        "java_version": "",
        "note": "Condsider adding Util.transform method in target method.",
        "bug_type": "crash",
        "checker_qual_required": true,
        "has_dependency": true
    },
    {
        "issue_id" : "cf-577",
        "url": "https://github.com/tahiat/issue-577.git",
        "branch": "",
        "commit_hash": "",
        "project_name": "issue-577",
        "build_command": "javac -processor nullness -AprintErrorStack java/util/stream/IncomparableTypes.java",
        "root_dir": "src/", 
        "targets": [
            {
                "method": "arrayForOne(int[], int, IntConsumer)",
                "file": "IncomparableTypes.java",
                "package": "com.example.stream",
                "inner_class": "Splitr"
            }
        ],
        "cf_version": "1.9.11",
        "java_version": "8",
        "note": "java.util.stream -> com.example.stream",
        "bug_type": "error",
        "bug_pattern": {
            "file_pattern": "Compilation unit: (.*)",
            "error_pattern": "error: (Incomparable types)",
            "exception_pattern": "Exception: (.+);",
            "stack_trace_pattern": "Stack trace: (.+)"
        },
        "build_system": "shell",
        "build_flags": ["-processor", "nullness", "-AprintErrorStack"],
        "build_targets": "src/**/*.java",
        "cf_release_url": "https://github.com/typetools/checker-framework/releases/download",
        "checker_qual_required": true,
        "has_dependency": false

    },
    {
        "issue_id" : "cf-3032",
        "url": "https://github.com/google/nomulus.git",
        "branch": "",
        "commit_hash": "c0ac9bdba4abe66847fc947667b5eec2ac105c7e",
        "project_name": "nomulus",
        "build_command": "javac -processor org.checkerframework.checker.units.UnitsChecker InvoicingPipeline.java",
        "root_dir": "core/src/main/java/", 
        "targets": [
            {
                "method": "expand(PCollection<BillingEvent>)",
                "file": "InvoicingPipeline.java",
                "package": "google.registry.beam.invoicing",
                "inner_class": "GenerateInvoiceRows"
            }
        ],
        "cf_version": "3.1.0",
        "java_version": "11",
        "note": "",
        "bug_type": "error",
        "bug_pattern": {
            "file_pattern": "(\\w+\\.java)",
            "error_pattern": "error: \\[(.+?)\\]",
            "source_pattern": "(.via\\(.*\\)\\);)",
            "found_pattern": "found   : (.*)",
            "required_pattern": "required: (.*)"
        },
        "checker_qual_required": false,
        "has_dependency": true
    },
    {
        "issue_id" : "cf-3619",
        "url": "https://github.com/apache/calcite.git",
        "branch": "cf-3619",
        "commit_hash": "103430b",
        "project_name": "calcite",
        "build_command": "",
        "root_dir": "core/src/main/java/", 
        "targets": [
            {
                "method": "equals(Object)",
                "file": "ImmutableIntList.java",
                "package": "org.apache.calcite.util"
            }
        ],
        "cf_version": "3.6.0",
        "java_version": "11",
        "note": "Project build: ./gradlew build. Error should occur on nullness checker",
        "bug_type": "error",
        "bug_pattern": {
            "file_pattern": "(\\w+\\.java)",
            "error_pattern": "error: \\[(.+?)\\]",
            "source_pattern": "(return\\sthis\\s==\\sobj)"
        },
        "checker_qual_required": true,
        "has_dependency": true
    },
    {
        "issue_id" : "cf-3021",
        "url": "https://github.com/google/guava.git",
        "branch": "",
        "commit_hash": "28b36c8",
        "project_name": "guava",
        "build_command": "",
        "root_dir": "guava/src/", 
        "targets": [
            {
                "method": "checkedEntry(Entry<Class<? extends B>, B>)",
                "file": "MutableClassToInstanceMap.java",
                "package": "com.google.common.collect"
            }
        ],
        "cf_version": "3.0.1",
        "java_version": "8",
        "note": "",
        "bug_type": "semi_crash",
        "bug_pattern": {
            "file_pattern": "Compilation unit: (.*)",
            "error_pattern": "error: (.+?):",
            "target_pattern": "Targeted annotations: (.*)",
            "valid_pattern": "Valid annotations: (.*)",
            "exception_pattern": "Exception: (.+);",
            "stack_trace_pattern": "Stack trace: (.+)"
        },
        "checker_qual_required": true,
        "has_dependency": true
    },
    {
        "issue_id" : "cf-3020",
        "url": "https://github.com/google/guava.git",
        "branch": "",
        "commit_hash": "28b36c8",
        "project_name": "guava",
        "build_command": "",
        "root_dir": "guava/src/", 
        "targets": [
            {
                "method": "getBestValidator()",
                "file": "FuturesGetChecked.java",
                "package": "com.google.common.util.concurrent",
                "inner_class": "GetCheckedTypeValidatorHolder"
            }
        ],
        "cf_version": "3.0.1",
        "java_version": "8",
        "note": "",
        "bug_type": "semi_crash",
        "bug_pattern": {
            "file_pattern": "Compilation unit: (.*)",
            "error_pattern": "error: (.+?):",
            "exception_pattern": "Exception: (.+):",
            "stack_trace_pattern": "Stack trace: (.+)"
        },
        "checker_qual_required": false,
        "has_dependency": true
    },
    {
        "issue_id" : "cf-3022",
        "url": "https://github.com/google/guava.git",
        "branch": "",
        "commit_hash": "28b36c8",
        "project_name": "guava",
        "build_command": "checker/bin/javac -processor org.checkerframework.checker.nullness.NullnessChecker Multimaps.java",
        "root_dir": "guava/src/", 
        "targets": [
            {
                "method": "wrapCollection(K, Collection<V>)",
                "file": "Multimaps.java",
                "package": "com.google.common.collect",
                "inner_class": "CustomMultimap"
            }
        ],
        "cf_version": "3.0.1",
        "java_version": "8",
        "note": "",
        "bug_type": "error",
        "bug_pattern": {
            "file_pattern": "(\\w+\\.java)",
            "error_pattern": "error: \\[(.+?)\\]",
            "source_pattern": "(return\\s+new\\s+WrappedCollection\\(.*\\);)",
            "found_pattern": "found   : (.*)",
            "required_pattern": "required: (.*)"
        },
        "checker_qual_required": true,
        "has_dependency": true
    },
    {
        "issue_id" : "cf-691",
        "url": "https://github.com/tahiat/Issue691.git",
        "branch": "",
        "commit_hash": "",
        "project_name": "Issue691",
        "build_command": "java -jar $CHECKERFRAMEWORK/checker/dist/checker.jar -processor formatter -AprintErrorStack java/util/Collections.java",
        "root_dir": "", 
        "targets": [
            {
		"method": "",
                "field": "EMPTY_NAVIGABLE_SET",
                "file": "Collections.java",
                "package": "com.example",
		"inner_class": "UnmodifiableNavigableSet"
            }
        ],
        "cf_version": "1.9.13",
        "java_version": "8",
        "note": "target method is not confirmed. package name changed.",
        "bug_type": "error",
        "bug_pattern": {
            "file_pattern": "Compilation unit: (.*)",
            "error_pattern": "error: (.+?):",
            "exception_pattern": "Exception: (.+);",
            "stack_trace_pattern": "Stack trace: (.+)"
        },
        "checker_qual_required": true,
        "build_system": "shell",
        "build_flags": ["-processor", "formatter", "-AprintErrorStack"],
        "build_targets": "src/**/*.java",
        "cf_release_url": "https://github.com/typetools/checker-framework/releases/download",
        "has_dependency": false
    },
    {
        "issue_id" : "Issue689",
        "url": "https://github.com/tahiat/Issue689.git",
        "branch": "",
        "commit_hash": "",
        "project_name": "Issue689",
        "build_command": "java -jar $CHECKERFRAMEWORK/checker/dist/checker.jar -processor guieffect -AprintErrorStack java/util/AbstractList.java",
        "root_dir": "", 
        "targets": [
            {
                "method": "listIterator(int)",
                "file": "AbstractList.java",
                "package": "com.example",
                "inner_class": "",
                "non_primary_class": "SubList"
            }
        ],
        "cf_version": "1.9.13",
        "java_version": "8",
        "note": "package java.util changed to com.example",
        "bug_type": "error",
        "bug_pattern": {
            "file_pattern": "Compilation unit: (.*)",
            "error_pattern": "error: (.+?):",
            "exception_pattern": "Exception: (.+);",
            "stack_trace_pattern": "Stack trace: (.+)"
        },
        "checker_qual_required": true,
        "build_system": "shell",
        "build_flags": ["-processor", "guieffect", "-AprintErrorStack"],
        "build_targets": "src/**/*.java",
        "cf_release_url": "https://github.com/typetools/checker-framework/releases/download",
        "has_dependency": false
    },
    {
        "issue_id" : "cf-6388",
        "url": "https://github.com/kennknowles/beam",
        "branch": "checkerframework-StructuralEqualityComparer",
        "commit_hash": "",
        "project_name": "beam",
        "build_command": "checkerframework-StructuralEqualityComparer",
        "root_dir": "sdks/java/core/src/main/java/", 
        "targets": [
            {
                "method": "via(Contextful<Fn<UserT, OutputT>>, Contextful<Fn<DestinationT, Sink<OutputT>>>)",
                "file": "FileIO.java",
                "package": "org.apache.beam.sdk.io",
                "inner_class": "Write"
            }
        ],
        "cf_version": "3.40.0",
        "java_version": "17",
        "note": "",
        "bug_type": "crash",
        "checker_qual_required": false,
        "has_dependency": true
    },
    {
        "issue_id" : "cf-3025",
        "url": "https://github.com/google/guava.git",
        "issue_url": "https://github.com/typetools/checker-framework/issues/3025",
        "branch": "",
        "commit_hash": "c08594f",
        "project_name": "guava",
        "build_command": "",
        "root_dir": "guava/src/", 
        "targets": [
            {
                "method": "difference(Map<? extends K, ? extends V>, Map<? extends K, ? extends V>, Equivalence<? super V>)",
                "file": "Maps.java",
                "package": "com.google.common.collect",
                "inner_class": ""
            }
        ],
        "cf_version": "3.0.1",
        "java_version": "8",
        "note": "",
        "bug_type": "semi_crash",
        "bug_pattern": {
            "file_pattern": "Compilation unit: (.*)",
            "error_pattern": "error: (.+?):",
            "exception_pattern": "Exception: (.+):",
            "stack_trace_pattern": "Stack trace: (.+)"
        },
        "checker_qual_required": true,
        "has_dependency": true
    },
    {
        "issue_id" : "jdk-8319461",
        "url": "https://github.com/m-m-m/property.git",
        "issue_url": "https://bugs.openjdk.org/browse/JDK-8319461",
        "test_case_url": "",
        "branch": "",
        "commit_hash": "54a637",
        "project_name": "property",
        "build_command": "",
        "root_dir": "core/src/main/java/", 
        "targets": [
            {
                "method": "create(Class<P>, Class<V>, String, PropertyMetadata<V>)",
                "file": "PropertyFactoryManager.java",
                "package": "io.github.mmm.property.factory",
                "inner_class": ""
            }
        ],
        "cf_version": "",
        "java_version": "21.0.1",
        "note": "",
        "bug_type": "error",
        "bug_pattern": {
            "file_pattern": "(\\w+\\.java)",
            "error_pattern": "(error: incompatible types:)"
        },
        "checker_qual_required": false,
        "has_dependency": false
    },
    {
        "issue_id" : "jdk-8288590",
        "url": "https://github.com/assertj/assertj.git",
        "issue_url": "https://bugs.openjdk.org/browse/JDK-8288590",
        "test_case_url": "",
        "branch": "",
        "commit_hash": "",
        "project_name": "assertj",
        "build_command": "",
        "root_dir": "assertj-core/src/main/java/", 
        "targets": [
            {
                "method": "simpleFieldValues(String, Class<T>, Iterable<?>)",
                "file": "FieldSupport.java",
                "package": "org.assertj.core.util.introspection",
                "inner_class": ""
            }
        ],
        "cf_version": "",
        "java_version": "17.0.9",
        "note": "Issue occurs in oracle jdk.",
        "bug_type": "error",
        "bug_pattern": {
            "file_pattern": "(\\w+\\.java)",
            "error_pattern": "(incompatible types:)"
        },
        "build_system": "javac",
        "compiler_option": "export _JAVA_OPTIONS=\"-XX:+UnlockExperimentalVMOptions -XX:hashCode=2\"",
        "checker_qual_required": false,
        "has_dependency": false
    }
]
